bt_navigator:
  ros__parameters:
    enable_stamped_cmd_vel: false
    default_nav_to_pose_bt_xml: $(find-pkg-share agriculture_robot_navigation)/config/bt.xml
    default_nav_through_poses_bt_xml: $(find-pkg-share agriculture_robot_navigation)/config/bt_poses.xml
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odom
    bt_loop_duration: 50
    filter_duration: 0.3
    default_server_timeout: 900
    introspection_mode: "disabled"
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code
      - navigate_to_pose_error_code
      - navigate_through_poses_error_code

controller_server:
  ros__parameters:
    controller_frequency: 30.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.7
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 1.57
      stateful: True
    FollowPath:
      plugin: "nav2_dynamic_window_pure_pursuit_controller::DynamicWindowPurePursuitController" # change here to use DWPP plugin
      desired_linear_vel: 3.0 # DWPP parameter
      desired_angular_vel: 0.2 # DWPP parameter
      max_linear_accel: 1.25 # DWPP parameter
      max_angular_accel: 1.05 # DWPP parameter
      velocity_feedback: "OPEN_LOOP"
      lookahead_dist: 2.0
      min_lookahead_dist: 0.3
      max_lookahead_dist: 2.0
      lookahead_time: 20.0
      rotate_to_heading_angular_vel: 1.8
      transform_tolerance: 1.0
      use_velocity_scaled_lookahead_dist: false # use adaptive pure pursuit
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: false
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: false # use regulated pure pursuit
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false # use regulated pure pursuit
      cost_scaling_dist: 0.3
      cost_scaling_gain: 1.0
      regulated_linear_scaling_min_radius: 0.1
      regulated_linear_scaling_min_speed: 1.0
      use_rotate_to_heading: false # DWPP does not need rotation to heading
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_robot_pose_search_dist: 2.0
      min_distance_to_obstacle: 0.0
      stateful: true

local_costmap:
  local_costmap:
    ros__parameters:
      enable_stamped_cmd_vel: false
      update_frequency: 30.0
      publish_frequency: 30.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.06
      footprint: "[ [2.0, 1.0], [2.0, -1.0], [-4.0, -1.0], [-4.0, 1.0] ]"
      always_send_full_costmap: true
      plugins: ["static_layer", "voxel_layer", "inflation_layer","obstacle_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 4.2
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: true
        publish_voxel_map: false
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 10.0
        mark_threshold: 0
        observation_sources: pointcloud1 pointcloud2
        pointcloud2:
          topic: left_camera/points
          max_obstacle_height: 10.0
          clearing: true
          marking: true
          data_type: "PointCloud2"
          raytrace_max_range: 1.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          transport_type: "raw"  # raw or/ with compression (zlib, dr
        pointcloud1:
          topic: right_camera/points
          max_obstacle_height: 10.0
          clearing: true
          marking: true
          data_type: "PointCloud2"
          raytrace_max_range: 1.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          transport_type: "raw"  # raw or/ with compression (zlib, draco, zstd)
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: pointcloud1 pointcloud2
        footprint_clearing_enabled: true
        pointcloud1:
          topic: left_camera/points
          max_obstacle_height: 10.0
          clearing: true
          marking: true
          data_type: "PointCloud2"
          raytrace_max_range: 1.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          transport_type: "raw"  # raw or/ with compression (zlib, draco, zstd)
        pointcloud2:
          topic: right_camera/points
          max_obstacle_height: 10.0
          clearing: true
          marking: true
          data_type: "PointCloud2"
          raytrace_max_range: 1.0
          raytrace_min_range: 0.0
          obstacle_max_range: 30.0
          obstacle_min_range: 0.0
          transport_type: "raw"  # raw or/ with compression (zlib, draco, zstd)

global_costmap:
  global_costmap:
    ros__parameters:
      enable_stamped_cmd_vel: false
      update_frequency: 30.0
      publish_frequency: 30.0
      global_frame: map
      robot_base_frame: base_link
      footprint: "[ [2.0, 1.0], [2.0, -1.0], [-4.0, -1.0], [-4.0, 1.0] ]"
      resolution: 0.06
      track_unknown_space: true
      always_send_full_costmap: false
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 4.2
        cost_scaling_factor: 10.0
        inflate_unknown: False
        inflate_around_unknown: False
      always_send_full_costmap: True

planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]

    GridBased:
      plugin: "nav2_smac_planner::SmacPlannerHybrid" # In Iron and older versions, "/" was used instead of "::"
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      tolerance: 2.0                      # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      allow_unknown: true                 # allow traveling in unknown space
      max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000000 # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 5.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "DUBIN"    # Hybrid-A* Dubin, Redds-Shepp
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 2.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
      analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
      minimum_turning_radius: 6.0         # minimum turning radius in m of path / vehicle
      reverse_penalty: 1.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.0                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.2           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 2.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      retrospective_penalty: 0.015
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsequent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      debug_visualizations: false         # For Hybrid nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning) and the path's footprints on the /planned_footprints topic. WARNING: heavy to compute and to display, for debug only as it degrades the performance.
      use_quadratic_cost_penalty: True
      downsample_obstacle_heuristic: True
      allow_primitive_interpolation: False
      coarse_search_resolution: 4         # Number of bins to skip when doing a coarse search for the path. Only used for all_direction goal heading mode.
      goal_heading_mode: "ALL_DIRECTION"  # DEFAULT, BIDIRECTIONAL, ALL_DIRECTION
      smooth_path: false                   # If true, does a simple and quick smoothing post-processing to the path

      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2

smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother", "route_smoother"]
    simple_smoother:
      plugin: "nav2_constrained_smoother/ConstrainedSmoother"
      reversing_enabled: true       # whether to detect forward/reverse direction and cusps. Should be set to false for paths without orientations assigned
      path_downsampling_factor: 3   # every n-th node of the path is taken. Useful for speed-up
      path_upsampling_factor: 1     # 0 - path remains downsampled, 1 - path is upsampled back to original granularity using cubic bezier, 2... - more upsampling
      keep_start_orientation: true  # whether to prevent the start orientation from being smoothed
      keep_goal_orientation: true   # whether to prevent the gpal orientation from being smoothed
      minimum_turning_radius: 20.0  # minimum turning radius the robot can perform. Can be set to 0.0 (or w_curve can be set to 0.0 with the same effect) for diff-drive/holonomic robots
      w_curve: 100.0                 # weight to enforce minimum_turning_radius
      w_dist: 0.0                   # weight to bind path to original as optional replacement for cost weight
      w_smooth: 2000000.0           # weight to maximize smoothness of path
      w_cost: 1.0               # weight to steer robot away from collision and cost
      # Parameters used to improve obstacle avoidance near cusps (forward/reverse movement changes)
      w_cost_cusp_multiplier: 3.0   # option to use higher weight during forward/reverse direction change which is often accompanied with dangerous rotations
      cusp_zone_length: 2.5         # length of the section around cusp in which nodes use w_cost_cusp_multiplier (w_cost rises gradually inside the zone towards the cusp point, whose costmap weight eqals w_cost*w_cost_cusp_multiplier)
      # Points in robot frame to grab costmap values from. Format: [x1, y1, weight1, x2, y2, weight2, ...]
      # IMPORTANT: Requires much higher number of iterations to actually improve the path. Uncomment only if you really need it (highly elongated/asymmetric robots)
      # cost_check_points: [-0.185, 0.0, 1.0]
      optimizer:
        max_iterations: 70            # max iterations of smoother
        debug_optimizer: false        # print debug info
        gradient_tol: 5e3
        fn_tol: 1.0e-15
        param_tol: 1.0e-20
    route_smoother:
      plugin: "nav2_constrained_smoother/ConstrainedSmoother"
      reversing_enabled: true       # whether to detect forward/reverse direction and cusps. Should be set to false for paths without orientations assigned
      path_downsampling_factor: 3   # every n-th node of the path is taken. Useful for speed-up
      path_upsampling_factor: 1     # 0 - path remains downsampled, 1 - path is upsampled back to original granularity using cubic bezier, 2... - more upsampling
      keep_start_orientation: true  # whether to prevent the start orientation from being smoothed
      keep_goal_orientation: true   # whether to prevent the gpal orientation from being smoothed
      minimum_turning_radius: 20.00  # minimum turning radius the robot can perform. Can be set to 0.0 (or w_curve can be set to 0.0 with the same effect) for diff-drive/holonomic robots
      w_curve: 100.0                 # weight to enforce minimum_turning_radius
      w_dist: 0.0                   # weight to bind path to original as optional replacement for cost weight
      w_smooth: 2000000.0           # weight to maximize smoothness of path
      w_cost: 1.0                 # weight to steer robot away from collision and cost
      # Parameters used to improve obstacle avoidance near cusps (forward/reverse movement changes)
      w_cost_cusp_multiplier: 3.0   # option to use higher weight during forward/reverse direction change which is often accompanied with dangerous rotations
      cusp_zone_length: 2.5         # length of the section around cusp in which nodes use w_cost_cusp_multiplier (w_cost rises gradually inside the zone towards the cusp point, whose costmap weight eqals w_cost*w_cost_cusp_multiplier)
      # Points in robot frame to grab costmap values from. Format: [x1, y1, weight1, x2, y2, weight2, ...]
      # IMPORTANT: Requires much higher number of iterations to actually improve the path. Uncomment only if you really need it (highly elongated/asymmetric robots)
      # cost_check_points: [-0.185, 0.0, 1.0]
      optimizer:
        max_iterations: 70            # max iterations of smoother
        debug_optimizer: false        # print debug info
        gradient_tol: 5e3
        fn_tol: 1.0e-15
        param_tol: 1.0e-20

behavior_server:
  ros__parameters:
    enable_stamped_cmd_vel: false
    local_costmap_topic: local_costmap/costmap_raw
    global_costmap_topic: global_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["drive_on_heading", "assisted_teleop", "wait"]
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
    global_frame: map
    local_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    enable_stamped_cmd_vel: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.2
    rotational_acc_lim: 0.5

waypoint_follower:
  ros__parameters:
    enable_stamped_cmd_vel: true
    global_frame_id: "map"
    loop_rate: 20
    stop_on_failure: false
    action_server_result_timeout: 900.0
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    enable_stamped_cmd_vel: false
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [4.2, 0.0, 1.8]
    min_velocity: [-2.0, 0.0, -1.8]
    max_accel: [2.5, 0.0, 2.5]
    max_decel: [-2.5, 0.0, -2.5]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

collision_monitor:
  ros__parameters:
    enable_stamped_cmd_vel: false
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    cmd_vel_in_topic: "cmd_vel_smoothed"
    cmd_vel_out_topic: "cmd_vel"
    state_topic: "collision_monitor_state"
    transform_tolerance: 0.2
    source_timeout: 2.0
    base_shift_correction: True
    stop_pub_timeout: 1.0
    # Polygons represent zone around the robot for "stop", "slowdown" and "limit" action types,
    # and robot footprint for "approach" action type.
    polygons: ["PolygonStop", "PolygonSlow", "FootprintApproach"]
    PolygonSlow:
      type: "polygon"
      points: "[[6.0, 1.0], [6.0, -1.0], [-1.0, -1.0], [-1.0, 1.0]]"
      action_type: "slowdown"
      min_points: 4  # max_points: 3 for Humble
      slowdown_ratio: 0.3
      visualize: True
      polygon_pub_topic: "polygon_slowdown"
      enabled: True
    PolygonStop:
      type: "polygon"
      points: "[[3.0, 1.0], [3.0, -1.0], [-1.0, -1.0], [-1.0, 1.0]]"
      action_type: "stop"
      min_points: 4  # max_points: 3 for Humble
      visualize: True
      polygon_pub_topic: "polygon_stop"
      enabled: True
    FootprintApproach:
      type: "polygon"
      action_type: "approach"
      footprint_topic: "local_costmap/published_footprint"
      time_before_collision: 1.0
      simulation_time_step: 0.2
      min_points: 4
      visualize: False
      enabled: True
    observation_sources: ["pointcloud1", "pointcloud2"]
    pointcloud1:
      type: "pointcloud"
      topic: "right_camera/points"
      transport_type: "raw"  # raw or/ with compression (zlib, draco, zstd)
      min_height: 0.1
      max_height: 10.0
      min_range: 0.2
      enabled: True
    pointcloud2:
      type: "pointcloud"
      topic: "left_camera/points"
      transport_type: "raw"  # raw or/ with compression (zlib, draco, zstd)
      min_height: 0.1
      max_height: 10.0
      min_range: 0.2
      enabled: True
      
docking_server:
  ros__parameters:
    enable_stamped_cmd_vel: false
    controller_frequency: 50.0
    initial_perception_timeout: 5.0
    wait_charge_timeout: 5.0
    dock_approach_timeout: 30.0
    undock_linear_tolerance: 0.05
    undock_angular_tolerance: 0.1
    max_retries: 3
    base_frame: "base_link"
    fixed_frame: "odom"
    dock_backwards: false
    dock_prestaging_tolerance: 0.5

    # Types of docks
    dock_plugins: ['simple_charging_dock']
    simple_charging_dock:
      plugin: 'opennav_docking::SimpleChargingDock'
      docking_threshold: 0.05
      staging_x_offset: -0.7
      use_external_detection_pose: true
      use_battery_status: false # true
      use_stall_detection: false # true
      external_detection_timeout: 1.0
      external_detection_translation_x: -0.18
      external_detection_translation_y: 0.0
      external_detection_rotation_roll: -1.57
      external_detection_rotation_pitch: -1.57
      external_detection_rotation_yaw: 0.0
      filter_coef: 0.1

    controller:
      k_phi: 3.0
      k_delta: 2.0
      v_linear_min: 0.15
      v_linear_max: 0.15

      use_collision_detection: true
      costmap_topic: "/local_costmap/costmap_raw"
      footprint_topic: "/local_costmap/published_footprint"
      transform_tolerance: 0.1
      projection_time: 5.0
      simulation_step: 0.1
      dock_collision_threshold: 0.3